name: CDK Deploy on AWS

on:
    push:
        branches:
            - main
      
jobs:
    build:
        runs-on: ubuntu-latest
        environment: Production
        permissions:
            contents: read
            id-token: write
        env:
            APP_NAME: ${{ vars.APP_NAME }}
            ACCOUNT_AWS: ${{ vars.ACCOUNT_AWS }}
            REGION_AWS: ${{ vars.REGION_AWS }}
            
            AOT_MINIMAL_API_DIRECTORY: ${{ vars.AOT_MINIMAL_API_DIRECTORY }}
            AOT_MINIMAL_API_LAMBDA_HANDLER: ${{ vars.AOT_MINIMAL_API_LAMBDA_HANDLER }}
            AOT_MINIMAL_API_LAMBDA_MEMORY_SIZE: ${{ vars.AOT_MINIMAL_API_LAMBDA_MEMORY_SIZE }}
            AOT_MINIMAL_API_LAMBDA_TIMEOUT: ${{ vars.AOT_MINIMAL_API_LAMBDA_TIMEOUT }}
            AOT_MINIMAL_API_MAPPING_DOMAIN_NAME: ${{ vars.AOT_MINIMAL_API_MAPPING_DOMAIN_NAME }}
            AOT_MINIMAL_API_MAPPING_KEY: ${{ vars.AOT_MINIMAL_API_MAPPING_KEY }}
            
            DISPATCHER_DIRECTORY: ${{ vars.DISPATCHER_DIRECTORY }}
            DISPATCHER_LAMBDA_HANDLER: ${{ vars.DISPATCHER_LAMBDA_HANDLER }}
            DISPATCHER_LAMBDA_MEMORY_SIZE: ${{ vars.DISPATCHER_LAMBDA_MEMORY_SIZE }}
            DISPATCHER_LAMBDA_TIMEOUT: ${{ vars.DISPATCHER_LAMBDA_TIMEOUT }}
            
            EXECUTOR_DIRECTORY: ${{ vars.EXECUTOR_DIRECTORY }}
            EXECUTOR_LAMBDA_HANDLER: ${{ vars.EXECUTOR_LAMBDA_HANDLER }}
            EXECUTOR_LAMBDA_MEMORY_SIZE: ${{ vars.EXECUTOR_LAMBDA_MEMORY_SIZE }}
            EXECUTOR_LAMBDA_TIMEOUT: ${{ vars.EXECUTOR_LAMBDA_TIMEOUT }}
            EXECUTOR_LAMBDA_PREFIX_ROLES: ${{ vars.EXECUTOR_LAMBDA_PREFIX_ROLES }}
                                    
        steps:
            - name: Checkout Repositorio
              uses: actions/checkout@v4
      
            - name: Instalar .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: ${{ vars.VERSION_DOTNET }}
      
            - name: Instalar Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ vars.VERSION_NODEJS }}
                                                      
            - name: Instalar AWS CDK
              run: npm install -g aws-cdk
                    
            - name: Publish .NET AoT Minimal API
              run: |
                  docker run --rm -v ${{ github.workspace }}/${{ vars.AOT_MINIMAL_API_DIRECTORY }}:/src -w /src public.ecr.aws/amazonlinux/amazonlinux:2023 \bash -c "
                    yum install -y dotnet-sdk-8.0 gcc zlib-devel && 
                    dotnet publish /p:PublishDir=../publish /p:PublishAot=true -r linux-x64 --self-contained &&
                    cd ./publish &&
                    zip -r -T ./publish.zip ./*"
                    
            - name: Publish .NET Lambda
              working-directory: ${{ vars.DISPATCHER_DIRECTORY }}
              run: dotnet publish /p:PublishDir=../publish /p:PublishReadyToRun=true -r linux-x64 --no-self-contained
              
            - name: Compress Publish Directory .NET Lambda
              working-directory: ${{ vars.DISPATCHER_DIRECTORY }}/publish
              run: zip -r -T ./publish.zip ./*
              
            - name: Publish .NET Lambda
              working-directory: ${{ vars.EXECUTOR_DIRECTORY }}
              run: dotnet publish /p:PublishDir=../publish /p:PublishReadyToRun=true -r linux-x64 --no-self-contained
              
            - name: Compress Publish Directory .NET Lambda
              working-directory: ${{ vars.EXECUTOR_DIRECTORY }}/publish
              run: zip -r -T ./publish.zip ./*
                    
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
              with:
                  aws-region: ${{ vars.REGION_AWS }}
                  role-to-assume: ${{ vars.ARN_GITHUB_ROLE }}
                  
            - name: CDK Synth
              working-directory: ${{ vars.DIRECTORIO_CDK }}
              run: cdk synth
              
            - name: CDK Diff
              working-directory: ${{ vars.DIRECTORIO_CDK }}
              run: cdk --app cdk.out diff
              
            - name: CDK Deploy
              working-directory: ${{ vars.DIRECTORIO_CDK }}
              run: cdk --app cdk.out deploy --require-approval never
          